models:
users (has many favorite events. has many favorite cities. has many favorite venues)
user_favorites (polymorphic table favorite_type=event,city,venue. favorite_id is foreign key.) this table ties users with their favorites.
user_rsvps (join table)
cities (has many events. has many venues)
venues (belongs to one city) (has many events)
events (belongs to one city. belongs to one venue) (schema: venue_id, date) (description: what is the description, as a text_area, time: when is the event?, title: what is the title?)
artists (HAS_MANY events) (schema: name, description as text area) (has_many links)
links (belongs to one artist. social media links for artists- spotify, website, twitter, facebook, EMBED YOUTUBE LINK FOR PLAYING THEIR MUSIC) (polymorphic table link_type=spotify,website,twitter,facebook. link_id)
votes (polymorphic table vote_type=event,artist, vote_id, user_id)
features (polymophic, feature_type=event,venue, feature_id=)
event_relationship (join between events and artists)



what to do:
- static pages on footer
- tests for search / vue portion. finish formating front end of search results
- calendar feature
- surprise me feature



=================

- friendships on user my profile page on right bar. can find people to follow by seeing who has rsvp'd for the same events you have rsvp'd for.
- show your favorites on the right bar of the my profile page, right under your friendships
- THE FAVORITES FEATURE NEEDS TO BE IMPLEMENTED ON THE WHOLE SITE



=======
THINGS TO DO:
- Upvote / downvote images X 
- users should be able to un-upvote events too. right now they can only upvote.
- favorite / unfavorite toggle images X
- where do buy ticket buttons go?
- static link pages on bottom need content

- favorite counts on all pages
- entire friends component
- show password entries for login


brainstorming schema for favorites:
user_favorites (polymorphic table favorite_type=event,city,venue. favorite_id is foreign key.)













